# Development Docker Compose Configuration
# For production deployment, use: docker-compose -f docker-compose.prod.yml up -d

services:
  redis:
    image: redis:7.4-alpine
    container_name: redis_dev
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_dev_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-devpassword123}
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD:-devpassword123}
    networks:
      - pii_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  pii-api:
    build:
      context: ./src/api
      dockerfile: Dockerfile
    image: pii-api:dev
    container_name: pii-api-dev
    restart: unless-stopped
    ports:
      - "${API_PORT:-8080}:80"
    networks:
      - pii_network
    environment:
      - REDIS_HOSTNAME=redis
      - REDIS_PORT=6379
      - REDIS_KEY=${REDIS_PASSWORD:-devpassword123}
      - REDIS_DB=0
      - LOG_LEVEL=${LOG_LEVEL:-debug}
    depends_on:
      - redis
    volumes:
      - ./src/api:/app  # Mount source for hot reload
      - /var/run/dstack.sock:/var/run/dstack.sock  # TEE socket
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  client-app:
    build:
      context: ./src/client_app
      dockerfile: Dockerfile.dev
    image: pii-frontend:dev
    container_name: pii-frontend-dev
    restart: unless-stopped
    ports:
      - "${CLIENT_PORT:-3000}:3000"
    networks:
      - pii_network
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      - pii-api
    volumes:
      - ./src/client_app:/app  # Mount source for hot reload
      - /app/node_modules      # Prevent node_modules from being overwritten
      - /app/.next             # Prevent .next from being overwritten
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  pii_network:
    driver: bridge

volumes:
  redis_dev_data: