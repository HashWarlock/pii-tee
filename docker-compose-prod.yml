services:
  redis:
    image: redis:7.4-alpine
    container_name: redis_production
    restart: always
    ports:
      - "${LISTEN_IP:-127.0.0.1}:6379:6379" # Use environment variable for IP
    volumes:
      - redis_data:/data # Persist Redis data in a named volume
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD} # Set a strong password for Redis
      - REDIS_MAXMEMORY=2gb # Limit memory usage to prevent OOM issues
      - REDIS_MAXMEMORY_POLICY=allkeys-lru # Evict least recently used keys when memory is full
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    sysctls:
      - net.core.somaxconn=1024 # Increase the maximum number of connections
    ulimits:
      nofile:
        soft: 65535 # Increase file descriptor limits
        hard: 65535
    security_opt:
      - no-new-privileges:true # Prevent privilege escalation
    logging:
      driver: json-file
      options:
        max-size: "10m" # Limit log size
        max-file: "3" # Rotate logs after 3 files
    networks:
      - redis_network

  pii-api: 
    image: hashwarlock/pii-api:v0.0.22
    container_name: pii-api
    restart: always
    ports:
      - "8080:80" # Expose API on host 8080 -> container 80
    networks:
      - redis_network
    environment:
      - CLIENT_URL=${CLIENT_URL:-http://client-app:3000}
      - REDIS_HOSTNAME=redis
      - REDIS_PORT=6379
      - REDIS_KEY=${REDIS_PASSWORD}
      - REDIS_DB=0
    depends_on:
      - redis
    volumes:
      - /var/run/tappd.sock:/var/run/tappd.sock

  client-app:
    image: hashwarlock/pii-client:v0.0.51
    container_name: pii-tee-frontend
    restart: always
    ports:
      - "${CLIENT_PORT:-3000}:3000" # Frontend accessible on port 3000
    networks:
      - redis_network
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://pii-api:80
      - NEXT_TELEMETRY_DISABLED=1
      - HOSTNAME=0.0.0.0
      - PORT=3000
      - OPENAI_API_BASE_URL=${OPENAI_API_BASE_URL:-https://api.openai.com/v1}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - pii-api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

networks:
  redis_network:

volumes:
  redis_data: